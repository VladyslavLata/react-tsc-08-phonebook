{"version":3,"file":"static/js/243.ed568aad.chunk.js","mappings":"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","sources":["components/PhonebookForm/Phonebook.styled.tsx","redux/contacts/selectors.tsx","components/Spinner/Spinner.styled.tsx","components/Spinner/Spinner.tsx","components/PhonebookForm/PhonebookForm.tsx","components/Contacts/Contacts.styled.tsx","components/ButtonDelete/ButtonDelete.styled.tsx","components/ButtonDelete/ButtonDelete.tsx","components/Contacts/Contacts.tsx","components/Filter/Filter.styled.tsx","components/Filter/Filter.tsx","components/Modal/Modal.styled.tsx","components/Modal/Modal.tsx","components/Message/Message.tsx","components/Title/Title.tsx","components/ButtonIcon/ButtonIcon.styled.tsx","components/ButtonIcon/ButtonIcon.tsx","pages/Contacts.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const Label = styled.label`\n  position: relative;\n  display: block;\n\n  &:not(:last-child) {\n    margin-bottom: ${p => p.theme.space[4]}px;\n  }\n`;\n\nexport const Input = styled(Field)`\n  padding: ${p => p.theme.space[0]} ${p => p.theme.space[3]}px;\n  width: 320px;\n  height: 30px;\n  font-size: ${p => p.theme.fontSizes.s};\n  border: ${p => p.theme.borders.m};\n  border-radius: ${p => p.theme.radii.sm};\n  border-color: ${p => p.theme.colors.bgSecondary};\n\n  &:focus-within {\n    border-color: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const LabelName = styled.p`\n  margin-bottom: ${p => p.theme.space[2]}px;\n`;\n\nexport const ErrorWrap = styled.div`\n  position: relative;\n  width: 100%;\n  height: 10px;\n`;\n\nexport const ErrorText = styled(ErrorMessage)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  color: ${p => p.theme.colors.red};\n  font-size: ${p => p.theme.fontSizes.xs};\n`;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { IState } from 'types/typers';\n\nexport const selectContacts = (state: IState) => state.contacts.items;\nexport const selectFilterName = (state: IState) => state.contacts.filter;\nexport const selectLoading = (state: IState) => state.contacts.isLoading;\nexport const selectErrorMessage = (state: IState) => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilterName],\n  (contacts, filterName) => {\n    const filterNameNormalized = filterName.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterNameNormalized)\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const SpinnerWrap = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 24px;\n  height: 24px;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { SpinnerWrap } from './Spinner.styled';\n\ninterface IProps {\n  loading: boolean,\n  size: string,\n}\n\nexport const Spinner: React.FC<IProps> = ({ loading, size }) => {\n  return (\n    <SpinnerWrap>\n      <RotatingLines\n        strokeColor=\"#ffffff\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width={size}\n        visible={loading}\n      />\n    </SpinnerWrap>\n  );\n};\n","import { Formik, Form, FormikHelpers } from 'formik';\nimport * as yup from 'yup';\nimport {\n  LabelName,\n  Input,\n  ErrorText,\n  Label,\n  ErrorWrap,\n} from './Phonebook.styled';\nimport { useSelector } from 'react-redux';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport { Button } from 'components/Button/Button';\nimport { Spinner } from 'components/Spinner/Spinner';\nimport { IContactForm, IItem } from 'types/typers';\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .strict()\n    .trim()\n    .min(1)\n    .max(30)\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'Name may contain only letters, apostrophe, dash and spaces'\n    )\n    .required(),\n  number: yup\n    .string()\n    .strict()\n    .trim()\n    .matches(\n      /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{2}\\)?)\\s?-?\\s?(\\(?\\d{2}\\)?)?$/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required(),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\ninterface IProps {\n  onAddContact: (contact: IContactForm) => void;\n  onReviewName: (name: string) => IItem | undefined;\n}\n\nexport const PhonebookForm: React.FC<IProps> = ({\n  onAddContact,\n  onReviewName,\n}) => {\n  const loading = useSelector(selectLoading);\n  const handleSubmit = (\n    values: IContactForm,\n    actions: FormikHelpers<IContactForm>\n  ) => {\n    if (onReviewName(values.name)) {\n      alert(`${values.name} is already in contacts.`);\n      return;\n    }\n\n    onAddContact({ ...values });\n    actions.resetForm();\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <Label htmlFor=\"name\">\n          <LabelName>Name</LabelName>\n          <Input autoComplete=\"off\" type=\"text\" name=\"name\" />\n          <ErrorWrap>\n            <ErrorText component=\"p\" name=\"name\" />\n          </ErrorWrap>\n        </Label>\n        <Label htmlFor=\"number\">\n          <LabelName>Phone</LabelName>\n          <Input type=\"tel\" name=\"number\" />\n          <ErrorWrap>\n            <ErrorText component=\"p\" name=\"number\" />\n          </ErrorWrap>\n        </Label>\n        <Button disabled={loading} margin=\"45px 0 0\">\n          Add contact\n          <Spinner loading={loading} size=\"24\" />\n        </Button>\n      </Form>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\ninterface IIndex {\n  index: number\n}\n\nexport const Number = styled.p`\n  margin-top: ${p => p.theme.space[2]}px;\n  font-size: ${p => p.theme.fontSizes.s};\n`;\n\nexport const ContactsList = styled.ul`\n  padding: ${p => p.theme.space[4]}px ${p => p.theme.space[3]}px;\n  margin-top: ${p => p.theme.space[4]}px;\n  margin: 30px auto 0;\n  max-width: 500px;\n  max-height: 70vh;\n  overflow: auto;\n  border: ${p => p.theme.borders.m};\n  border-color: ${p => p.theme.colors.bgSecondary};\n  border-radius: ${p => p.theme.radii.md};\n`;\n\nexport const ContactCard = styled.li<IIndex>`\n  box-sizing: border-box;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  padding: ${p => p.theme.space[3]}px;\n  border: ${p => p.theme.borders.m};\n  border-color: inherit;\n  border-radius: ${p => p.theme.radii.md};\n  background-color: ${p =>\n    p.index % 2 === 0 ? p.theme.colors.bgPrimary : p.theme.colors.bgSecondary};\n  box-shadow: 2px 2px 6px 0px rgba(0, 0, 0, 0.46);\n\n  &:not(:last-child) {\n    margin-bottom: ${p => p.theme.space[3]}px;\n  }\n\n  &:hover,\n  :focus {\n    border: ${p => p.theme.borders.m};\n    border-color: ${p => p.theme.colors.accent};\n  }\n`;\n","import styled from 'styled-components';\n\ninterface IIndex {\n  index: number,\n}\n\nexport const Button = styled.button<IIndex>`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 40px;\n  height: 40px;\n  border-radius: ${p => p.theme.radii.round};\n  border: ${p => p.theme.borders.none};\n  background-color: ${p => {\n    if (!p.index) {\n      return p.theme.colors.bgSecondary;\n    }\n    return p.index % 2 === 0\n      ? p.theme.colors.bgSecondary\n      : p.theme.colors.bgPrimary;\n  }};\n  cursor: pointer;\n\n  &:active {\n    box-shadow: none;\n  }\n\n  &:hover,\n  :focus {\n    background-color: ${p => p.theme.colors.accent};\n  }\n\n  & svg {\n    width: 24px;\n    height: 24px;\n  }\n`;\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button } from './ButtonDelete.styled';\nimport { Spinner } from 'components/Spinner/Spinner';\nimport { selectErrorMessage } from 'redux/contacts/selectors';\n\ninterface IProps {\n  onRemoveContact: (id: string) => void;\n  id: string;\n  index: number;\n  children: React.ReactNode;\n}\n\nexport const ButtonDelete: React.FC<IProps> = ({\n  onRemoveContact,\n  id,\n  index,\n  children,\n}) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const error = useSelector(selectErrorMessage);\n  if (error) {\n    setLoading(false);\n  }\n  return (\n    <Button\n      index={index}\n      type=\"button\"\n      disabled={loading}\n      onClick={() => {\n        setLoading(true);\n        onRemoveContact(id);\n      }}\n    >\n      <Spinner loading={loading} size={'24'} />\n      {children}\n    </Button>\n  );\n};\n","import * as SC from './Contacts.styled';\nimport { ButtonDelete } from 'components/ButtonDelete/ButtonDelete';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { VscClose } from 'react-icons/vsc';\n\ninterface IProps {\n  onRemoveContact: (name: string) => void;\n}\n\nexport const Contacts: React.FC<IProps> = ({ onRemoveContact }) => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  return (\n    <SC.ContactsList>\n      {visibleContacts.map(({ name, number, id }, i) => (\n        <SC.ContactCard key={id} index={i}>\n          <div>\n            <h3>{name}</h3>\n            <SC.Number>{number}</SC.Number>\n          </div>\n          <ButtonDelete onRemoveContact={onRemoveContact} id={id} index={i}>\n            <VscClose />\n          </ButtonDelete>\n        </SC.ContactCard>\n      ))}\n    </SC.ContactsList>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterHeader = styled.p`\n  margin-bottom: ${p => p.theme.space[2]}px;\n`;\n\nexport const Input = styled.input`\n  padding: ${p => p.theme.space[0]} ${p => p.theme.space[3]}px;\n  box-sizing: border-box;\n  width: 100%;\n  height: 30px;\n  font-size: ${p => p.theme.fontSizes.s};\n  border: ${p => p.theme.borders.m};\n  border-radius: ${p => p.theme.radii.sm};\n  border-color: ${p => p.theme.colors.bgSecondary};\n\n  &:focus-within {\n    border-color: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const InputWrap = styled.div`\n  margin: 0 auto;\n  max-width: 400px;\n`;\n","import * as SC from './Filter.styled';\n\ninterface IProps {\n  value: string;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport const Filter: React.FC<IProps> = ({ value, onChange }) => {\n  return (\n    <SC.InputWrap>\n      <label htmlFor=\"filter\">\n        <SC.Input\n          type=\"text\"\n          name=\"filter\"\n          value={value}\n          onChange={onChange}\n          placeholder=\"Find contacts by name\"\n        />\n      </label>\n    </SC.InputWrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 99999;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.8);\n\n  body & {\n    overflow: hidden;\n  }\n`;\n\nexport const ModalWrap = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  box-sizing: border-box;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: ${p => p.theme.space[5]}px;\n  width: 500px;\n  height: 400px;\n  border-radius: ${p => p.theme.radii.md};\n  background-color: ${p => p.theme.colors.bgPrimary};\n`;\n\nexport const ButtonCloseModal = styled.button`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 30px;\n  height: 30px;\n  border: ${p => p.theme.borders.none};\n  border-radius: ${p => p.theme.radii.round};\n  box-shadow: 2px 2px 6px 0px rgba(0, 0, 0, 0.46);\n  background-color: ${p => p.theme.colors.bgSecondary};\n  cursor: pointer;\n\n  &:hover,\n  :focus {\n    background-color: ${p => p.theme.colors.accent};\n  }\n\n  &:active {\n    box-shadow: none;\n  }\n`;\n","import { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nimport { RiCloseFill } from 'react-icons/ri';\nimport * as SC from './Modal.styled';\n\nconst modalEl = document.getElementById('modal')!;\n\ninterface IProps {\n  onClose: () => void;\n  children: React.ReactNode;\n}\n\nexport const Modal: React.FC<IProps> = ({ onClose, children }) => {\n  useEffect(() => {\n    const closeModalPressEsc = (e: KeyboardEvent) => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', closeModalPressEsc);\n    return () => window.removeEventListener('keydown', closeModalPressEsc);\n  }, [onClose]);\n\n  const closeModalClickBackdrop = (e: React.MouseEvent) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <SC.Backdrop onClick={closeModalClickBackdrop}>\n      <SC.ModalWrap>\n        {children}\n        <SC.ButtonCloseModal onClick={() => onClose()}>\n          <RiCloseFill />\n        </SC.ButtonCloseModal>\n      </SC.ModalWrap>\n    </SC.Backdrop>,\n    modalEl\n  );\n};\n","import { Box } from 'components/Box/Box';\n\ninterface IProps {\n  message: string,\n}\n\nexport const Message: React.FC<IProps> = ({ message }) => {\n  return (\n    <Box as=\"p\" p={4} color={'red'}>\n      {message}\n    </Box>\n  );\n};\n","import { Box } from 'components/Box/Box';\nimport { IPropsChildren } from 'types/typers';\n\nexport const Title: React.FC<IPropsChildren> = ({ children }) => {\n  return (\n    <Box as=\"h2\" mb={5} textAlign=\"center\">\n      {children}\n    </Box>\n  );\n};\n","import styled from 'styled-components';\n\ninterface IButtonStyled {\n  position: string[];\n  size: string;\n}\n\nexport const Button = styled.button<IButtonStyled>`\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  top: ${p => p.position[0]};\n  right: ${p => p.position[1]};\n  width: ${p => p.size};\n  height: ${p => p.size};\n  border-radius: ${p => p.theme.radii.round};\n  border: ${p => p.theme.borders.none};\n  box-shadow: 2px 2px 6px 0px rgba(0, 0, 0, 0.46);\n  background-color: ${p => p.theme.colors.accent};\n  cursor: pointer;\n  z-index: 9999;\n\n  &:hover,\n  :focus {\n    background-color: ${p => p.theme.colors.bgSecondary};\n  }\n\n  &:active {\n    box-shadow: none;\n  }\n\n  & svg {\n    width: 100%;\n    height: 100%;\n  }\n`;\n","import * as SC from './ButtonIcon.styled';\n\ninterface IProps {\n  size: string;\n  position: string[];\n  onClick: () => void;\n  children: React.ReactNode;\n}\n\nexport const ButtonIcon: React.FC<IProps> = ({\n  size,\n  position,\n  onClick,\n  children,\n}) => {\n  return (\n    <SC.Button size={size} position={position} onClick={() => onClick()}>\n      {children}\n    </SC.Button>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { Section } from 'components/Section/Section';\nimport { PhonebookForm } from 'components/PhonebookForm/PhonebookForm';\nimport { Contacts } from 'components/Contacts/Contacts';\nimport { Filter } from 'components/Filter/Filter';\nimport { Modal } from 'components/Modal/Modal';\nimport { filter } from 'redux/contacts/contactsSlice';\nimport { operations, selectors } from 'redux/contacts';\nimport { Message } from 'components/Message/Message';\nimport { Title } from '../components/Title/Title';\nimport { ButtonIcon } from 'components/ButtonIcon/ButtonIcon';\nimport { MdOutlineAdd } from 'react-icons/md';\nimport { useAppDispatch } from 'hooks/TSReduxHooks';\nimport { IContactForm } from 'types/typers';\n\nconst ContactsPage: React.FC = () => {\n  const [showModal, setShowModal] = useState<boolean>(false);\n\n  const dispatch = useAppDispatch();\n  const contacts = useSelector(selectors.selectContacts);\n  const name = useSelector(selectors.selectFilterName);\n  const messageError = useSelector(selectors.selectErrorMessage);\n  const visibleContacts = useSelector(selectors.selectVisibleContacts);\n\n  useEffect(() => {\n    dispatch(operations.fetchContacts());\n  }, [dispatch]);\n\n  const togleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const reviewNameInContacts = (name: string) => {\n    return contacts.find(contact => contact.name === name);\n  };\n\n  const addContact = (contact: IContactForm) => {\n    dispatch(operations.addNewContact(contact));\n    togleModal();\n  };\n\n  const removeContact = (removeContactId: string) => {\n    dispatch(operations.deleteContact(removeContactId));\n  };\n\n  const changeFilter = (e: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(filter(e.currentTarget.value.trimStart()));\n  };\n\n  return (\n    <>\n      <ButtonIcon size=\"50px\" position={['5px', '49%']} onClick={togleModal}>\n        <MdOutlineAdd />\n      </ButtonIcon>\n      <Section title=\"Contacts\">\n        <Filter value={name} onChange={changeFilter} />\n        {messageError && <Message message={messageError} />}\n        {visibleContacts.length > 0 && (\n          <Contacts onRemoveContact={removeContact} />\n        )}\n        {showModal && (\n          <Modal onClose={togleModal}>\n            <div>\n              <Title>Add Contact</Title>\n              <PhonebookForm\n                onAddContact={addContact}\n                onReviewName={reviewNameInContacts}\n              />\n            </div>\n          </Modal>\n        )}\n      </Section>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Label","styled","p","theme","space","Input","Field","fontSizes","s","borders","m","radii","sm","colors","bgSecondary","accent","LabelName","ErrorWrap","ErrorText","ErrorMessage","red","xs","selectContacts","state","contacts","items","selectFilterName","filter","selectLoading","isLoading","selectErrorMessage","error","selectVisibleContacts","createSelector","filterName","filterNameNormalized","toLowerCase","contact","name","includes","SpinnerWrap","Spinner","loading","size","strokeColor","strokeWidth","animationDuration","width","visible","schema","yup","shape","strict","trim","min","max","matches","required","number","initialValues","PhonebookForm","onAddContact","onReviewName","useSelector","validationSchema","onSubmit","values","actions","alert","resetForm","htmlFor","autoComplete","type","component","Button","disabled","margin","Number","ContactsList","md","ContactCard","index","bgPrimary","round","none","ButtonDelete","onRemoveContact","id","children","useState","setLoading","onClick","Contacts","visibleContacts","map","i","InputWrap","Filter","value","onChange","placeholder","Backdrop","ModalWrap","ButtonCloseModal","modalEl","document","getElementById","Modal","onClose","useEffect","closeModalPressEsc","e","code","window","addEventListener","removeEventListener","createPortal","target","currentTarget","Message","message","Box","as","color","Title","mb","textAlign","position","ButtonIcon","showModal","setShowModal","dispatch","useAppDispatch","selectors","messageError","operations","fetchContacts","togleModal","Section","title","trimStart","length","removeContactId","deleteContact","addNewContact","find"],"sourceRoot":""}